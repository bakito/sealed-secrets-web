name: end-2-end Helm Chart Tests

on:
  push:
    branches:
      - switch-to-sealed-secret-api

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        with:
          version: v0.14.0
          kubectl_version: v1.24.0
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Install jq
        uses: dcarbone/install-jq-action@v1.0.0
      - name: Install yq
        uses: dcarbone/install-yq-action@v1.0.0

      - name: Install sealed-secrets
        run: |
          helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
          helm install sealed-secrets sealed-secrets/sealed-secrets \
            --namespace sealed-secrets \
            --create-namespace \
            --atomic
      - name: Install sealed-secrets-web with yaml format
        run: |
          helm install sealed-secrets-web  charts/sealed-secrets-web \
            --namespace sealed-secrets-web \
            --create-namespace \
            --set image.tag=main \
            --set format=yaml \
            --set image.args[0]="--kubeseal-arguments=--controller-name=sealed-secrets --controller-namespace=sealed-secrets" \
            --atomic

      - name: Start port-forwarding for svc/sealed-secrets-web
        run: kubectl port-forward svc/sealed-secrets-web -n sealed-secrets-web 8080:80 &

      - name: Test 'encode should encode a yaml stringData secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.yaml \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/encode \
            | jq -r .secret \
            | diff ./data.yaml -


      - name: Test 'encode should not re-encode a yaml data secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh data.yaml \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/encode \
            | jq -r .secret \
            | diff ./data.yaml -

      - name: Test 'decode should decode a yaml data secret'
        working-directory: testdata/e2e
        run: |
            ./toSecret.sh data.yaml \
              | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/decode \
              | jq -r .secret \
              | diff ./stringData.yaml -

      - name: Test 'decode should not re-decode a yaml stringData secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.yaml \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/decode \
            | jq -r .secret \
            | diff ./stringData.yaml -

      - name: Test 'seal yaml'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data-binary @- localhost:8080/api/seal \
            | jq -r .secret > sealed.yaml
          cat sealed.yaml | yq .apiVersion | grep "bitnami.com/v1alpha1"
          cat sealed.yaml | yq .kind | grep "SealedSecret"
          cat sealed.yaml | yq .metadata.name | grep "mysecretname"
          cat sealed.yaml | yq .metadata.namespace | grep "mysecretnamespace"

      - name: Install sealed-secrets-web with json format
        run: |
          pkill -f "port-forward svc/sealed-secrets-web"
          helm delete sealed-secrets-web --namespace sealed-secrets-web
          helm install sealed-secrets-web  charts/sealed-secrets-web \
            --namespace sealed-secrets-web \
            --create-namespace \
            --set image.tag=main \
            --set format=json \
            --set image.args[0]="--kubeseal-arguments=--controller-name=sealed-secrets --controller-namespace=sealed-secrets" \
            --atomic

      - name: Start port-forwarding for svc/sealed-secrets-web
        run: kubectl port-forward svc/sealed-secrets-web -n sealed-secrets-web 8080:80 &

      - name: Test 'encode should encode a json stringData secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/encode \
            | jq -r .secret \
            | diff ./data.json -

      - name: Test 'encode should not re-encode a json data secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh data.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/encode \
            | jq -r .secret \
            | diff ./data.json -

      - name: Test 'decode should decode a json data secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh data.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/decode \
            | jq -r .secret \
            | diff ./stringData.json -

      - name: Test 'decode should not re-decode a json stringData secret'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data @- localhost:8080/api/decode \
            | jq -r .secret \
            | diff ./stringData.json -

      - name: Test 'seal json'
        working-directory: testdata/e2e
        run: |
          ./toSecret.sh stringData.json \
            | curl -s --show-error -H "Content-Type: application/json" -X POST --data-binary @- localhost:8080/api/seal \
            | jq -r .secret > sealed.json
          cat sealed.json | jq -r .apiVersion | grep "bitnami.com/v1alpha1"
          cat sealed.json | jq -r .kind | grep "SealedSecret"
          cat sealed.json | jq -r .metadata.name | grep "mysecretname"
          cat sealed.json | jq -r .metadata.namespace | grep "mysecretnamespace"
