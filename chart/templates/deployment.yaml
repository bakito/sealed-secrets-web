apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sealed-secrets-web.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sealed-secrets-web.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sealed-secrets-web.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "sealed-secrets-web.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "sealed-secrets-web.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.deployment.args }}
          args:
          {{- if .Values.deployment.args.defaultArgsEnabled }}
          {{- include "sealed-secrets-web.imageArgs" . | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.args.additionalArgs }}
          {{- toYaml .Values.deployment.args.additionalArgs | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.env }}
          env:
          {{- if .Values.deployment.env.sealedSecretsControllerNamespace }}
          - name: SEALED_SECRETS_CONTROLLER_NAMESPACE
            value: {{ .Values.deployment.env.sealedSecretsControllerNamespace }}
          {{- end }}
          {{- if .Values.deployment.env.sealedSecretsControllerName }}
          - name: SEALED_SECRETS_CONTROLLER_NAME
            value: {{ .Values.deployment.env.sealedSecretsControllerName }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- with .Values.deployment.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
